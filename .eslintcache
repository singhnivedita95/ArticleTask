[{"/home/ulcome29/Desktop/task/ArticleTask/src/index.js":"1","/home/ulcome29/Desktop/task/ArticleTask/src/App.js":"2","/home/ulcome29/Desktop/task/ArticleTask/src/reportWebVitals.js":"3","/home/ulcome29/Desktop/task/ArticleTask/src/article/article.js":"4"},{"size":500,"mtime":1611805655000,"results":"5","hashOfConfig":"6"},{"size":651,"mtime":1611836037393,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611805655000,"results":"8","hashOfConfig":"6"},{"size":5177,"mtime":1611818791669,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"6t542q",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/ulcome29/Desktop/task/ArticleTask/src/index.js",[],["20","21"],"/home/ulcome29/Desktop/task/ArticleTask/src/App.js",[],"/home/ulcome29/Desktop/task/ArticleTask/src/reportWebVitals.js",[],"/home/ulcome29/Desktop/task/ArticleTask/src/article/article.js",["22","23","24","25","26","27","28"],"import React, { useState } from \"react\";\n// import data from \"../data.json\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //  padding: \"10px\",\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    color: \"white\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  paper: {\n    flexGrow: 1,\n    width: \"100%\",\n    flexDirection: \"row\",\n  },\n  articles: {\n    flexGrow: 1,\n    width: \"100%\",\n    display: \"none\",\n    color: \"white\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  AppBar: {\n    background: theme.secondary,\n  },\n  list: {\n    flexGrow: 1,\n\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    margin: \"10px\",\n    padding: \"10px\",\n    maxHeight: \"30%\",\n  },\n  listContent: {\n    overflow: \"auto\",\n    height: \"calc(100vh - 100px - 60px)\",\n    maxHeight: \"calc(100vh - 100px - 20px)\",\n  },\n  button: {\n    color: \"white\",\n    // background: \"#0965ed\",\n    borderRadius: \"10px\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    padding: \"6px\",\n    borderWidth: \"2px\",\n    borderColor: \"white\",\n  },\n  listHeader: {\n    padding: \"10px\",\n    background: \"#9b9c9e\",\n  },\n  listHeaderItem: {\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    marginLeft: \"36px\",\n  },\n  listItem: {\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    margin: \"10px\",\n  },\n}));\nconst ArticleList = (props) => {\n  const classes = useStyles();\n  const [articleList, setArticleList] = useState({ filterList: props.data });\n  const creatArticleBox = (article, index) => {\n    return (\n      <Paper elevation={3} key={index}>\n        <ListItem>\n          <ListItemText className={classes.listItem}>\n            {article.title}\n          </ListItemText>\n          <ListItemText className={classes.listItem}></ListItemText>\n          <ListItemText className={classes.listItem}>\n            {new Date(article.date).toDateString()}\n          </ListItemText>\n          <ListItemText className={classes.listItem}></ListItemText>\n          <ListItemText className={classes.listItem}>\n            {article.upVotes}\n          </ListItemText>\n        </ListItem>\n      </Paper>\n    );\n  };\n  const filterMostRecent = (sortBy = \"desc\") => {\n    let list = articleList.filterList.sort(function (a, b) {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    });\n    setArticleList((prevState) => ({\n      ...prevState,\n      filterdList: list,\n    }));\n    return list;\n  };\n  const filterMostUpvoted = (sortBy = \"desc\") => {\n    let list = articleList.filterList.sort(\n      (a, b) => parseFloat(b.upVotes) - parseFloat(a.upVotes)\n    );\n    setArticleList((prevState) => ({\n      ...prevState,\n      filterdList: list,\n    }));\n    return list;\n  };\n  console.log(\"daa\", articleList);\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.AppBar} position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h4\" noWrap>\n            Article List\n          </Typography>\n          <div>\n            <Button onClick={() => filterMostUpvoted()}>\n              <Typography className={classes.button} variant=\"button\" noWrap>\n                Most UpVotes\n              </Typography>\n            </Button>\n\n            <Button onClick={() => filterMostRecent()}>\n              <Typography className={classes.button} variant=\"button\" noWrap>\n                Most Recent\n              </Typography>\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <List className={classes.list}>\n        <Paper>\n          <ListItem className={classes.listHeader}>\n            <ListItemText className={classes.listHeaderItem}>\n              Title\n            </ListItemText>\n            <ListItemText className={classes.listHeaderItem}></ListItemText>\n            <ListItemText className={classes.listHeaderItem}>Date</ListItemText>\n            <ListItemText className={classes.listHeaderItem}></ListItemText>\n\n            <ListItemText className={classes.listHeaderItem}>\n              UpVotes\n            </ListItemText>\n          </ListItem>\n        </Paper>\n        <div className={classes.listContent}>\n          {articleList.filterList.map((article, index) => {\n            return creatArticleBox(article, index);\n          })}\n        </div>\n      </List>\n    </div>\n  );\n};\nexport default ArticleList;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":17},{"ruleId":"33","severity":1,"message":"37","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":16},{"ruleId":"33","severity":1,"message":"38","line":8,"column":8,"nodeType":"35","messageId":"36","endLine":8,"endColumn":18},{"ruleId":"33","severity":1,"message":"39","line":12,"column":8,"nodeType":"35","messageId":"36","endLine":12,"endColumn":11},{"ruleId":"33","severity":1,"message":"40","line":13,"column":8,"nodeType":"35","messageId":"36","endLine":13,"endColumn":12},{"ruleId":"33","severity":1,"message":"41","line":16,"column":8,"nodeType":"35","messageId":"36","endLine":16,"endColumn":20},{"ruleId":"33","severity":1,"message":"42","line":18,"column":8,"nodeType":"35","messageId":"36","endLine":18,"endColumn":21},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'ListItemIcon' is defined but never used.","'ListSubheader' is defined but never used.","no-global-assign","no-unsafe-negation"]